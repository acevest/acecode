if v:lang =~ "utf8$" || v:lang =~ "UTF-8$"
   set fileencodings=ucs-bom,utf-8,latin1
endif
set nocompatible	" Use Vim defaults (much better!)
set bs=indent,eol,start		" allow backspacing over everything in insert mode
"set ai			" always set autoindenting on
"set backup		" keep a backup file
set viminfo='20,\"50	" read/write a .viminfo file, don't store more
			" than 50 lines of registers
set history=50		" keep 50 lines of command line history
set ruler		" show the cursor position all the time

" Only do this part when compiled with support for autocommands
if has("autocmd")
  augroup fedora
  autocmd!
  " In text files, always limit the width of text to 78 characters
  " autocmd BufRead *.txt set tw=78
  " When editing a file, always jump to the last cursor position
  autocmd BufReadPost *
  \ if line("'\"") > 0 && line ("'\"") <= line("$") |
  \   exe "normal! g'\"" |
  \ endif
  " don't write swapfile on most commonly used directories for NFS mounts or USB sticks
  autocmd BufNewFile,BufReadPre /media/*,/mnt/* set directory=~/tmp,/var/tmp,/tmp
  " start with spec file template
  autocmd BufNewFile *.spec 0r /usr/share/vim/vimfiles/template.spec
  augroup END
endif

if has("cscope") && filereadable("/usr/bin/cscope")
   set csprg=/usr/bin/cscope
   set csto=0
   set cst
   set nocsverb
   " add any database in current directory
   if filereadable("cscope.out")
      cs add cscope.out
   " else add database pointed to by environment
   elseif $CSCOPE_DB != ""
      cs add $CSCOPE_DB
   endif
   set csverb
endif

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
  syntax on
  set hlsearch
endif

filetype plugin on

if &term=="xterm"
     set t_Co=8
     set t_Sb=[4%dm
     set t_Sf=[3%dm
endif

" Don't wake up system with blinking cursor:
" http://www.linuxpowertop.org/known.php
let &guicursor = &guicursor . ",a:blinkon0"

" ========================================
" SELF SETTING
" ========================================
set number        " 显示行号
" set autoindent    " 自动对齐
set smartindent
set tabstop=4     " TAB的宽度
set shiftwidth=4
set expandtab     " TAB用空格代替，否则可用 set noexpandtab
set cursorline
set paste

"hi CursorLine ctermbg=lightcyan cterm=BOLD
"set cursorcolumn
"hi CursorColumn ctermbg=lightgreen cterm=BOLD
set viminfo='1000,<500

" 需要安装bundle/vundle vim-go 到~/.vim/
"filetype off
"set rtp+=~/.vim/bundle/vundle/
"call vundle#rc()
"Bundle 'gmarik/vundle'
"Plugin 'fatih/vim-go'
"filetype plugin indent on

" 以下是让mac vim支持中文输入
set encoding=utf-8  " 默认UTF-8
set fenc=utf-8      " 默认以UTF-8新建文件
set fileencodings=utf-8,cp936   " 打开文件编码按顺序匹配
set nobomb          " 


"为不同的文件类型设置不同的空格数替换TAB
autocmd FileType php,python,h,c,java,perl,shell,bash,vim,ruby,cc,cpp set ai
autocmd FileType php,python,h,c,java,perl,shell,bash,vim,ruby,cc,cpp set sw=4
autocmd FileType php,python,h,c,java,perl,shell,bash,vim,ruby,cc,cpp set ts=4
autocmd FileType php,python,h,c,java,perl,shell,bash,vim,ruby,cc,cpp set sts=4

"golang默认使用TAB
"autocmd FileType go set ai
"autocmd FileType go set tabstop=4
"autocmd FileType go set shiftwidth=4
"autocmd FileType go set noexpandtab

autocmd FileType asm set ai
autocmd FileType asm set tabstop=4
autocmd FileType asm set shiftwidth=4
autocmd FileType asm set expandtab

imap jj <esc> " 连续按两次jj表示按ESC，进入命令模式
